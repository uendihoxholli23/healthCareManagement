/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Project;

import java.awt.Color;
import javax.swing.JOptionPane;
import java.sql.*;
import java.sql.PreparedStatement;
import java.util.regex.*;
/**
 *
 * @author User
 */
public class Login extends javax.swing.JFrame {
    Connection con = null;
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        con = DBConnection.connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        signinPanel = new javax.swing.JPanel();
        alertUsername = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        button = new javax.swing.JButton();
        userIcon = new javax.swing.JLabel();
        passwordIcon = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        role = new javax.swing.JComboBox<>();
        roleIcon = new javax.swing.JLabel();
        alertPassword = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        roleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        signinPanel.setBackground(new java.awt.Color(30, 151, 134));
        signinPanel.setPreferredSize(new java.awt.Dimension(930, 700));

        alertUsername.setBackground(new java.awt.Color(255, 255, 255));
        alertUsername.setForeground(new java.awt.Color(204, 0, 0));
        alertUsername.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        title.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        title.setText("Sign in");

        username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameFocusLost(evt);
            }
        });
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameKeyReleased(evt);
            }
        });

        button.setBackground(new java.awt.Color(24, 81, 72));
        button.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        button.setForeground(new java.awt.Color(255, 255, 255));
        button.setText("Sign in");
        button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        userIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user.png"))); // NOI18N

        passwordIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/password.png"))); // NOI18N

        password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFocusGained(evt);
            }
        });
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        role.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Patient", "Doctor ", "Staff" }));
        role.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roleActionPerformed(evt);
            }
        });

        roleIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/role.png"))); // NOI18N

        alertPassword.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        alertPassword.setForeground(new java.awt.Color(255, 0, 0));

        usernameLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        usernameLabel.setText("Username:");

        passwordLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        passwordLabel.setText("Password:");

        roleLabel.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        roleLabel.setText("Choose role:");

        javax.swing.GroupLayout alertUsernameLayout = new javax.swing.GroupLayout(alertUsername);
        alertUsername.setLayout(alertUsernameLayout);
        alertUsernameLayout.setHorizontalGroup(
            alertUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alertUsernameLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(alertUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alertUsernameLayout.createSequentialGroup()
                        .addGroup(alertUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordIcon, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roleIcon, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(alertUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(alertUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(role, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(alertUsernameLayout.createSequentialGroup()
                                    .addGap(43, 43, 43)
                                    .addComponent(alertPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 3, Short.MAX_VALUE)
                                    .addGap(344, 344, 344))
                                .addComponent(password, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alertUsernameLayout.createSequentialGroup()
                        .addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(170, 170, 170))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alertUsernameLayout.createSequentialGroup()
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(116, 116, 116))))
        );
        alertUsernameLayout.setVerticalGroup(
            alertUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alertUsernameLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(alertUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alertUsernameLayout.createSequentialGroup()
                        .addComponent(usernameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(userIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(roleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(alertUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alertPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, alertUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(roleIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                        .addComponent(role)))
                .addGap(33, 33, 33)
                .addComponent(passwordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(alertUsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout signinPanelLayout = new javax.swing.GroupLayout(signinPanel);
        signinPanel.setLayout(signinPanelLayout);
        signinPanelLayout.setHorizontalGroup(
            signinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signinPanelLayout.createSequentialGroup()
                .addGap(220, 220, 220)
                .addComponent(alertUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(243, Short.MAX_VALUE))
        );
        signinPanelLayout.setVerticalGroup(
            signinPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(signinPanelLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(alertUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(156, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(signinPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(signinPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>                        

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void usernameFocusGained(java.awt.event.FocusEvent evt) {                                     
      
    }                                    

    private void usernameFocusLost(java.awt.event.FocusEvent evt) {                                   
    
    }                                  

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {                                       

        String userName = username.getText();
        String passWord = password.getText();
        String option = role.getSelectedItem().toString();
        
        //Login Validation
        if(userName.equals("")&&passWord.equals("")){  //if username and password blanks
            //Display message
            JOptionPane.showMessageDialog(this,"Please enter Username and Password!");
        }else if(!(userName.equals(""))&&passWord.equals("")){ //if username is enter but password is blank
             JOptionPane.showMessageDialog(this,"Please enter Password!");
        }else if((userName.equals(""))&&!passWord.equals("")){ //if password is enter but username is blank
            JOptionPane.showMessageDialog(this,"Please enter Username!");
        }else if(option.equalsIgnoreCase("Admin")){ //If user choose Admin Role will open Home Admin page
            HomeAdmin ad = new HomeAdmin();
            ad.setVisible(true);
            setVisible(false);
        }else if(option.equalsIgnoreCase("Staff")){ //If user choose Staff Role will open Home Staff page
            HomeStaff ad = new HomeStaff();
            ad.setVisible(true);
            setVisible(false);
        }else if(option.equalsIgnoreCase("Patient")){ //If user choose Patient Role will open Home Patient page
            HomePatient ad = new HomePatient();
            ad.setVisible(true);
            setVisible(false);
        }else if(option.equalsIgnoreCase("Doctor")){ //If user choose Doctor Role will open Home Doctor page
            HomeDoctor ad = new HomeDoctor();
            ad.setVisible(true);
            setVisible(false);
        }else{
             //Connected with db
            try{        
                //save data into db using queries
                String sql = "SELECT * FROM user WHERE username=? and Password=?";
                PreparedStatement pst = con.prepareStatement(sql); //prepareStatement help us to make the connection running all the time
                pst.setString(1,userName);
                pst.setString(2,passWord);
                JOptionPane.showMessageDialog(null, "Data was inserted");
                
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,"Data not inserted!");
                System.out.println("The error was: " + e);
            }
        }
 
    }                                      

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void passwordFocusGained(java.awt.event.FocusEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void roleActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
    }                                    

    private void usernameKeyReleased(java.awt.event.KeyEvent evt) {                                     
                // Username validation
                 //   String PATTERN ="^[a-zA-Z0-9]{0,30}$";
                  //  Pattern patt = Pattern.compile(PATTERN);
                  //  Matcher match = patt.matcher(username.getText());
                  //  if(!match.matches()){
                   //    alertUsername.setText("Username is incorrect");
                  //  }
                   // else{
                   //     alertUsername.setText(null);
                   // }
    }                                    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel alertPassword;
    private javax.swing.JPanel alertUsername;
    private javax.swing.JButton button;
    private javax.swing.JPasswordField password;
    private javax.swing.JLabel passwordIcon;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JComboBox<String> role;
    private javax.swing.JLabel roleIcon;
    private javax.swing.JLabel roleLabel;
    private javax.swing.JPanel signinPanel;
    private javax.swing.JLabel title;
    private javax.swing.JLabel userIcon;
    private javax.swing.JTextField username;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration                   
}
